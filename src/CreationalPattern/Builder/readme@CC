建造者模式Builder：
  将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
使用范围：
  构建复杂对象的过程或算法是稳定的，而每个构建步骤中的细节又是变化的。
 
 例子：
 奥迪汽车工厂有一条制造奥迪A6的生产线，可以生产A6低配、中配、高配三种汽车产品


 分析：
 汽车是复杂对象/产品，这条生产线需要生产三种产品：
 低配：普通车身——>排量1.8T发动机——>仿真皮车座
 中配：加强车身——>排量2.0T发动机——>真皮车座
 高配：复合材料车身——>排量2.6T发动机——>小牛皮车座
 
 生产线的装配流程是固定的：车身——>发动机——>车座
 但三种产品的具体建造细节又是不一样的，如车身强度要求不一样，发动机排量不一样，车座皮质不一样
 
解决办法：采用Builder设计模式
1.构建对象的算法流程是固定的，由Director指挥者来控制流程的执行（注意：多个流程之间的顺序必须确定，即在Create生产产品的方法中定义流程方法的先后顺序）
2.定义一个建造者的接口，定义一个建造过程具体有哪些流程（注意：多个流程之间可以无序），即定义每个流程的方法规范（方法的输入输出）
3.根据需要生产多少类产品，定义多个实现建造者接口的具体建造类，在每个具体建造类中根据产品的特定要求，在对应的流程方法中具体控制